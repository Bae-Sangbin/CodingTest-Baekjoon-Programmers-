-- SELECT 
--     I.*, 
--     ROUND(R.AVG_SCORE, 2) AS SCORE
-- FROM (
--     SELECT REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ADDRESS
--     FROM REST_INFO
--     WHERE ADDRESS LIKE '서울%'
--     ) I, (
--         SELECT REST_ID, AVG(REVIEW_SCORE) AS AVG_SCORE
--         FROM REST_REVIEW
--         GROUP BY REST_ID
--     ) R 
-- WHERE I.REST_ID = R.REST_ID
-- ORDER BY 
--     SCORE DESC,
--     FAVORITES DESC

-- SELECT DISTINCT
--     I.REST_ID, I.REST_NAME, I.FOOD_TYPE, I.FAVORITES, I.ADDRESS,
--     ROUND(AVG(REVIEW_SCORE) OVER(PARTITION BY R.REST_ID), 2) AS SCORE
-- FROM REST_INFO I, REST_REVIEW R
-- WHERE I.REST_ID = R.REST_ID
-- AND I.ADDRESS LIKE '%서울%'
-- ORDER BY 
--     SCORE DESC,
--     FAVORITES DESC;
    
-- SELECT DISTINCT
--     I.REST_ID, 
--     I.REST_NAME, 
--     I.FOOD_TYPE, 
--     I.FAVORITES, 
--     I.ADDRESS, 
--     ROUND(AVG(R.REVIEW_SCORE) OVER(PARTITION BY R.REST_ID),2) AS SCORE
-- FROM REST_INFO I, REST_REVIEW R ON I.REST_ID = R.REST_ID
-- WHERE ADDRESS LIKE '서울%'
-- ORDER BY SCORE DESC, FAVORITES DESC

SELECT DISTINCT
    I.REST_ID,
    I.REST_NAME,
    I.FOOD_TYPE,
    I.FAVORITES,
    I.ADDRESS,
    ROUND(AVG(R.REVIEW_SCORE) OVER(PARTITION BY R.REST_ID), 2) AS SCORE
FROM REST_INFO I
JOIN REST_REVIEW R ON I.REST_ID = R.REST_ID
WHERE I.ADDRESS LIKE '서울%'
ORDER BY SCORE DESC, FAVORITES DESC;
